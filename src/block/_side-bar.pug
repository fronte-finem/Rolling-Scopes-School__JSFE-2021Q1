include ../element/_button.pug
include ../element/_bage.pug
include ../element/_button.pug
include ../element/_svg-icon.pug

mixin side-bar(root, animal)
  include ../_lib/_bem.js.pug
  -
    const sidebar = new Bem('side-bar');
    const data = [
      { name: 'panda',     id: 'icon-panda',     link: 'pages/zoos/panda.html',   text: "Watch live from China's Panda Center " },
      { name: 'eagle',     id: 'icon-eagle',     link: 'pages/zoos/eagle.html',   text: "Watch The Bald Eagles Nest from West End cam" },
      { name: 'gorilla',   id: 'icon-gorilla',   link: 'pages/zoos/gorilla.html', text: "Livestream from Gorilla Forest Corridor habitat cam" },
      { name: 'lemur',     id: 'icon-lemur',     link: 'pages/zoos/lemur.html',   text: "The ring-tailed lemurs play in Madagascar, Lemuria Land" },
      { name: 'tiger',     id: 'icon-tiger',     link: 'pages/contact-us.html',   text: "Watch the tiger in tropical forests on the Sumatra." },
      { name: 'lion',      id: 'icon-lion',      link: 'pages/contact-us.html',   text: "Livestream from the Lion savanna cam." },
      { name: 'alligator', id: 'icon-alligator', link: 'pages/contact-us.html',   text: "Watch the alligator in Florida's live stream." },
      { name: 'coala',     id: 'icon-coala',     link: 'pages/contact-us.html',   text: "The koala resting on Australia forest habitat cam." },
    ]

    function round(x, {head, tail} = barrel) {
      if (x == head.name) return {head:head, tail:tail};
      if (tail.every(y => y.name != x)) throw new Error(`'${x}' not found in ${tail}`);
      while (x != head.name) {
        tail.push(head);
        head = tail.shift();
      }
      return {head:head, tail:tail};
    }

  // ⚜️ BLOCK: SIDE-BAR ⚜️
  div(class = 'side-bar-rail')
    aside(class = sidebar.fullClass)
      div(class = sidebar.elem('container', 'bage'))
        +bage('live', 'active')

      div(class = sidebar.elem('menu'))
        div(class = sidebar.elem('container', ['control', 'control-expand']))
          +btn-icon({id: 'icon-expand'})

        div(class = sidebar.elem('container', ['control', 'control-scroll-down']))
          +btn-icon({id: 'icon-scroll-down'})

        - const head = data.filter(x => x.name === animal)[0];
        - const tail = data.filter(x => x.name !== animal);

        div(class = sidebar.elem('container', 'selector'))
          ul(class = sidebar.elem('selector'))
            li(class = sidebar.elem('slot', 'not-active'))
              +btn-link-icon(root, head, ['cam', 'self'], sidebar.fullClass, disabled = true)
            each item in tail
              li(class = sidebar.elem('slot'))
                +btn-link-icon(root, item, ['cam'], sidebar.fullClass)


