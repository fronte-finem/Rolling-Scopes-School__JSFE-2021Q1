include ../element/_button.pug
include ../element/_bage.pug
include ../element/_button.pug
include ../element/_svg-icon.pug

mixin side-bar(root, animal)
  include ../_lib/_bem.js.pug
  -
    const sidebar = new Bem('side-bar');
    const data = [
      { title: 'panda',   id: 'icon-panda',   link: 'pages/zoos/panda.html' },
      { title: 'eagle',   id: 'icon-eagle',   link: 'pages/zoos/eagle.html' },
      { title: 'gorilla', id: 'icon-gorilla', link: 'pages/zoos/gorilla.html' },
      { title: 'lemur',   id: 'icon-lemur',   link: 'pages/zoos/lemur.html' },
    ];

    function round(x, {head, tail} = barrel) {
      if (x == head.title) return {head:head, tail:tail};
      if (tail.every(y => y.title != x)) throw new Error(`'${x}' not found in ${tail}`);
      while (x != head.title) {
        tail.push(head);
        head = tail.shift();
      }
      return {head:head, tail:tail};
    }

  // ⚜️ BLOCK: SIDE-BAR ⚜️
  div(class = 'side-bar-rail')
    aside(class = sidebar.fullClass)
      div(class = sidebar.elem('container', 'bage'))
        +bage('live', 'active')

      div(class = sidebar.elem('menu'))
        div(class = sidebar.elem('container', ['control', 'control-expand']))
          +btn-icon({id: 'icon-expand'})

        div(class = sidebar.elem('container', ['control', 'control-scroll-down']))
          +btn-icon({id: 'icon-scroll-down'})

        - const {head, tail} = round(animal, {head: data.shift(), tail: data});

        ul(class = sidebar.elem('selector'))
          li(class = sidebar.elem('slot', 'active'))
            +btn-link-icon(root, head, ['cam', 'self'], sidebar.self, disabled = true)
          each item in tail
            li(class = sidebar.elem('slot'))
              +btn-link-icon(root, item, 'cam', sidebar.self)


